/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE MAVNET_COMMAND PACKING
package com.mavlink.mavnet;
import com.mavlink.MAVLinkPacket;
import com.mavlink.messages.MAVLinkMessage;
import com.mavlink.messages.MAVLinkPayload;
        
/**
 * Send a command with up to seven parameters to an MAVNet system.
 */
public class msg_mavnet_command extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_MAVNET_COMMAND = 43000;
    public static final int MAVLINK_MSG_LENGTH = 37;
    private static final long serialVersionUID = MAVLINK_MSG_ID_MAVNET_COMMAND;


      
    /**
     * The command state sequence number against which this command should apply
     */
    public long command_sequence;
      
    /**
     * Parameter 1, as defined by MAVNET_CMD enum.
     */
    public int param1;
      
    /**
     * Parameter 2, as defined by MAVNET_CMD enum.
     */
    public int param2;
      
    /**
     * Parameter 3, as defined by MAVNET_CMD enum.
     */
    public int param3;
      
    /**
     * Parameter 4, as defined by MAVNET_CMD enum.
     */
    public int param4;
      
    /**
     * Parameter 5, as defined by MAVNET_CMD enum.
     */
    public int param5;
      
    /**
     * Parameter 6, as defined by MAVNET_CMD enum.
     */
    public int param6;
      
    /**
     * Parameter 7, as defined by MAVNET_CMD enum.
     */
    public int param7;
      
    /**
     * The mission sequence number for this command (0: Not applied to a mission, greater than 0: mission step)
     */
    public int mission_sequence;
      
    /**
     * Command ID, as defined by MAVNET_CMD enum.
     */
    public int command;
      
    /**
     * System which should execute the command
     */
    public short target_system;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_MAVNET_COMMAND;
        
        packet.payload.putUnsignedInt(command_sequence);
        
        packet.payload.putInt(param1);
        
        packet.payload.putInt(param2);
        
        packet.payload.putInt(param3);
        
        packet.payload.putInt(param4);
        
        packet.payload.putInt(param5);
        
        packet.payload.putInt(param6);
        
        packet.payload.putInt(param7);
        
        packet.payload.putUnsignedShort(mission_sequence);
        
        packet.payload.putUnsignedShort(command);
        
        packet.payload.putUnsignedByte(target_system);
        
        if(isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a mavnet_command message into this class fields
     *
     * @param payload The message to decode
     */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.command_sequence = payload.getUnsignedInt();
        
        this.param1 = payload.getInt();
        
        this.param2 = payload.getInt();
        
        this.param3 = payload.getInt();
        
        this.param4 = payload.getInt();
        
        this.param5 = payload.getInt();
        
        this.param6 = payload.getInt();
        
        this.param7 = payload.getInt();
        
        this.mission_sequence = payload.getUnsignedShort();
        
        this.command = payload.getUnsignedShort();
        
        this.target_system = payload.getUnsignedByte();
        
        if(isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_mavnet_command() {
        msgid = MAVLINK_MSG_ID_MAVNET_COMMAND;
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_mavnet_command(MAVLinkPacket mavLinkPacket) {
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_MAVNET_COMMAND;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);        
    }

                          
    /**
     * Returns a string with the MSG name and data
     */
    public String toString() {
        return "MAVLINK_MSG_ID_MAVNET_COMMAND - sysid:"+sysid+" compid:"+compid+" command_sequence:"+command_sequence+" param1:"+param1+" param2:"+param2+" param3:"+param3+" param4:"+param4+" param5:"+param5+" param6:"+param6+" param7:"+param7+" mission_sequence:"+mission_sequence+" command:"+command+" target_system:"+target_system+"";
    }
}
        